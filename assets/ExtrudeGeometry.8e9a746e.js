import{X as h,S as m,V as e,E as u,M as E,D as b,b as x,ae as f,P as g,af as y,_ as G,ah as v,ai as C}from"./index.8e24c117.js";import{d as M,o as S,c as L,a as P,_ as W}from"./index.38011464.js";const l=new h,k=new m([new e(0,0),new e(60,0),new e(60,80),new e(40,120),new e(-20,80)]),z=new m([new e(100,0),new e(160,0),new e(160,80),new e(140,120)]),R=new u([k,z],{depth:50,bevelEnabled:!1}),A=new E({color:65535,side:b}),B=new x(R,A);l.add(B);const H={id:"ExtrudeGeometry"},D=M({__name:"ExtrudeGeometry",setup(I){return S(()=>{const n=new f;n.add(l);const i=new g(16777215);i.position.set(400,200,300),n.add(i);const p=new y(4473924);n.add(p);const a=window.innerWidth,r=window.innerHeight,d=a/r,s=150,o=new G(-s*d,s*d,s,-s,1,1e3);o.position.set(200,200,200),o.lookAt(n.position);const t=new v;t.setPixelRatio(window.devicePixelRatio),t.setSize(a,r),t.setClearColor(12178431,1);const c=document.getElementById("ExtrudeGeometry");c&&c.appendChild(t.domElement);const _=()=>{o.aspect=window.innerWidth/window.innerHeight,o.updateProjectionMatrix(),t.setSize(window.innerWidth,window.innerHeight)};window.addEventListener("resize",_,!1),console.log("scene",n);const w=()=>{t.render(n,o),requestAnimationFrame(w)};w(),new C(o,t.domElement)}),(n,i)=>(P(),L("div",H))}});const j=W(D,[["__scopeId","data-v-dbb4f1c9"]]);export{j as default};
