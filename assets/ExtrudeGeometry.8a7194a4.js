import{G as h,S as m,V as e,E as u,M as E,D as b,b as x,c as f,P as g,A as y,O as G,W as v,d as C}from"./index.0ec0e768.js";import{d as M,o as S,c as W,a as L,_ as P}from"./index.78861fe6.js";const l=new h,k=new m([new e(0,0),new e(60,0),new e(60,80),new e(40,120),new e(-20,80)]),z=new m([new e(100,0),new e(160,0),new e(160,80),new e(140,120)]),A=new u([k,z],{depth:50,bevelEnabled:!1}),R=new E({color:65535,side:b}),B=new x(A,R);l.add(B);const H={id:"ExtrudeGeometry"},O=M({__name:"ExtrudeGeometry",setup(D){return S(()=>{const n=new f;n.add(l);const i=new g(16777215);i.position.set(400,200,300),n.add(i);const p=new y(4473924);n.add(p);const r=window.innerWidth,a=window.innerHeight,d=r/a,s=150,o=new G(-s*d,s*d,s,-s,1,1e3);o.position.set(200,200,200),o.lookAt(n.position);const t=new v;t.setPixelRatio(window.devicePixelRatio),t.setSize(r,a),t.setClearColor(12178431,1);const c=document.getElementById("ExtrudeGeometry");c&&c.appendChild(t.domElement);const _=()=>{o.aspect=window.innerWidth/window.innerHeight,o.updateProjectionMatrix(),t.setSize(window.innerWidth,window.innerHeight)};window.addEventListener("resize",_,!1),console.log("scene",n);const w=()=>{t.render(n,o),requestAnimationFrame(w)};w(),new C(o,t.domElement)}),(n,i)=>(L(),W("div",H))}});const j=P(O,[["__scopeId","data-v-dbb4f1c9"]]);export{j as default};
